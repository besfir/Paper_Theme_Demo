name: Deploy to gh-pages

on:
  workflow_dispatch:
    inputs:
      workflowRunId:
        description: 'The ID of the workflow run'
        required: true
        type: number
      artifactId:
        description: 'The ID of the artifact'
        required: true
        type: number

permissions:
  actions: read
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    env:
      baseUrl:
      unlighthouse-dir-path: __unlighthouse

    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - uses: actions/download-artifact@v4
        with:
          name: nuxt-build
          github-token: ${{ secrets.TOKEN }}
          repository: besfir/Simple-Blog
          run-id: ${{ inputs.workflowRunId }}

      - name: Upload generated site as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./
          name: nuxt-build
          retention-days: 1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.TOKEN }}
          artifact_name: nuxt-build

      - uses: actions/download-artifact@v4
        with:
          name: nuxt-build

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Unlighthouse Dependencies
        run: bun i -g @unlighthouse/cli puppeteer netlify-cli

      - name: Get router prefix
        id: ufo
        uses: actions/github-script@v7
        with:
          script: |
            function joinPaths(...paths) {
                return paths
                .map(path => path.replace(/(^\/+|\/+$)/g, ''))
                .filter(Boolean)
                .join('/');
            }
            let baseUrl = '${{ env.baseUrl }}';
            let unlighthouseDirPath = '${{ env.unlighthouse-dir-path }}';
            return joinPaths(baseUrl, unlighthouseDirPath)

      - name: Get result
        run: echo "${{ steps.ufo.outputs.result }}"

      - name: Unlighthouse assertions and client
        run: unlighthouse-ci --site ${{ steps.deployment.outputs.page_url }} --build-static --output-path ${{ env.unlighthouse-dir-path }} --router-prefix ${{ steps.ufo.outputs.result }}

      - name: Upload generated site as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./
          name: nuxt-lighthouse

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.TOKEN }}
          artifact_name: nuxt-lighthouse

      - name: Delete artifacts from Current Repo
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const remoteArtifactId = ${{ inputs.artifactId }}
            await github.rest.actions.deleteArtifact({
              owner: 'besfir',
              repo: 'Simple-Blog',
              artifact_id: remoteArtifactId
            });
            console.log(`Artifact with ID ${remoteArtifactId} deleted successfully.`);
            
            const artifactNames = ['nuxt-lighthouse', 'nuxt-build'];
            
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            
            for (const name of artifactNames) {
              const artifact = artifacts.data.artifacts.find(artifact => artifact.name === name);
            
              if (artifact) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
              });
              console.log(`${name} artifact with ID ${artifact.id} deleted successfully.`);
              } else {
                console.log(`Artifact with name ${name} not found.`);
              }
            }

      - name: Slack notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,took,action
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
